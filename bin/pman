#!/bin/sh -e
#L:
#L:  MIT License
#L:  
#l:  Bug reports, feature requests to gemini|https://harkadev.com/oss
#l:  Copyright (c) 2022 Harkaitz Agirre, harkaitz.aguirre@gmail.com
#L:
#L:  Permission is hereby granted, free of charge, to any person obtaining
#L:  a copy of this software and associated documentation files (the
#L:  "Software"), to deal in the Software without restriction, including
#L:  without limitation the rights to use, copy, modify, merge, publish,
#L:  distribute, sublicense, and/or sell copies of the Software, and to
#L:  permit persons to whom the Software is furnished to do so, subject to
#L:  the following conditions:
#L:
#L:  The above copyright notice and this permission notice shall be
#L:  included in all copies or substantial portions of the Software.
#L:
#L:  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
#L:  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
#L:  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
#L:  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
#L:  LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
#L:  OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
#L:  WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
##:
#h: Usage: $0 [OPTS...][DOC]
#h:
#h: Documentation storing and accessing tool.
#h:
#h: -V         : Show variables.
#h: -v         : Verbose mode.
#h: -ld        : List search directories.
#h: -l         : List documentation files.
#h: -a N=F ... : Add documentation files to '~/.pman'.
#h: -c N ...   : Return success if all are installed. 
#h: N1 N2 ...  : Open documentation.
pman() {
    ## Parse command line arguments.
    local OPTIND optopt= ops=
    while getopts "vVldac" optopt; do
        local ops="${ops}${optopt}"
        case $optopt in
            v)  local VERBOSE=y;;
            \?) return 1;;
        esac
    done
    shift $(( $OPTIND - 1 ))
    ## Show variables.
    case "${ops}" in *V*)  pman_show_variables ;; esac
    case "${ops}" in
        *ld*) pman_dirs  ;;
        *l*)  pman_list  ;;
    esac
    ## Operations.
    case "${ops}" in
        *c*) pman_check_files "$@" ;;
        *a*) pman_add_files "${HOME}/.pman" "$@";;
        *)   pman_open "$@";;
    esac
    
}
pman_show_variables() {
    printf '%-20s : %s\n'               \
           PMAN_PATH   "${PMAN_PATH}"   \
           PMAN_SPATH  "${PMAN_SPATH}"  \
           PMAN_VIEWER "${PMAN_VIEWER}" \
           VERBOSE     ""
}
pman_calc_variables() {
    PMAN_SPATH="${HOME}/.pman:/usr/local/share/pman:/usr/share/pman"
    if test -n "${PMAN_READER}"; then
        true
    elif which p >/dev/null 2>&1; then
        PMAN_VIEWER="p"
    else
        PMAN_VIEWER="xdg-open"
    fi
}
## -----------------------------------------------------------------------------
pman_dirs() {
    local IFS=':' d=''
    for d in ${PMAN_PATH} ${PMAN_SPATH}; do
        test ! -d "${d}" || echo "${d}"
    done
}
pman_add_files() {
    local n='' f='' d='' p="${1}"
    shift
    while test -n "$1"; do
        n="`echo "$1" | sed -n 's|=.*||p'`"
        f="`echo "$1" | sed    's|^[^=]*=||'`"
        shift
        if test ! -n "${n}"; then
            d="${p}/other"
            n="`basename "${f}" .pdf`"
        else
            d="${p}/`dirname "${n}"`"
            n="`basename ${n}`"
        fi
        if test ! -n "${f}"; then
            continue
        fi
        verbose "Saving ${d}/${n}.pdf ..."
        mkdir -p "${d}"
        cp "${f}" "${d}/${n}.pdf"
    done
}
pman_list() {
    local p="`pwd`" d=''
    for d in `pman_dirs`; do
        cd "${d}"
        find . -type f | sed 's|^\./||;s|\.pdf$||'
        cd "${p}"
    done
}
pman_open() {
    local d='' p=''
    while test -n "${1}"; do
        for d in `pman_dirs`; do
            if test -f "${d}/${1}.pdf"; then
                ${PMAN_VIEWER} "${d}/${1}.pdf"
            fi
        done
        shift
    done
}
pman_check_files() {
    local lst="`pman_list`"
    while test -n "${1}"; do
        if test ! -n "`echo "${lst}" | grep "^${1}\$"`"; then
            return 1
        fi
        shift
    done
    return 0
}





## -----------------------------------------------------------------------------
verbose() {
    if test -n "${VERBOSE}"; then
        echo "${SCRNAME}: $*" >&2
    fi
}
pman_calc_variables
SCRNAME="`basename "$0"`"
if test @"${SCRNAME}" = @"pman";then
    case "${1}" in
        ''|-h|--help)
            sed -n 's/^ *#h: \{0,1\}//p' "$0" | sed "s|\\\$0|${SCRNAME}|g"
            echo ""
            sed -n 's/^ *#l: \{0,2\}//p' "$0"
            ;;
        *)
            pman "$@"
            ;;
    esac
fi
